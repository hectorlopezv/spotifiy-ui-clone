[{"/home/hector/spotifiy-ui-clone/src/index.tsx":"1","/home/hector/spotifiy-ui-clone/src/reportWebVitals.ts":"2","/home/hector/spotifiy-ui-clone/src/App.tsx":"3","/home/hector/spotifiy-ui-clone/src/Components/Login/Login.tsx":"4","/home/hector/spotifiy-ui-clone/src/lib/spotify.ts":"5","/home/hector/spotifiy-ui-clone/src/Components/Player/Player.tsx":"6","/home/hector/spotifiy-ui-clone/src/Store/reducers/App.ts":"7","/home/hector/spotifiy-ui-clone/src/Store/actions/actionTypes.ts":"8","/home/hector/spotifiy-ui-clone/src/Store/actions/player.ts":"9","/home/hector/spotifiy-ui-clone/src/Components/Player/SideBar/SideBar.tsx":"10","/home/hector/spotifiy-ui-clone/src/Components/Player/Body/Body.tsx":"11","/home/hector/spotifiy-ui-clone/src/Components/Player/Footer/Footer.tsx":"12","/home/hector/spotifiy-ui-clone/src/Components/Player/SideBar/SideBarOptions/SideBarOptions.tsx":"13","/home/hector/spotifiy-ui-clone/src/Components/Player/Body/Header/Header.tsx":"14","/home/hector/spotifiy-ui-clone/src/Components/Player/Body/SongRow/SongRow.tsx":"15"},{"size":1152,"mtime":1609873781880,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609767073226,"results":"18","hashOfConfig":"17"},{"size":2093,"mtime":1609987576900,"results":"19","hashOfConfig":"17"},{"size":560,"mtime":1609773015460,"results":"20","hashOfConfig":"17"},{"size":659,"mtime":1609868169460,"results":"21","hashOfConfig":"17"},{"size":556,"mtime":1609987545980,"results":"22","hashOfConfig":"17"},{"size":1817,"mtime":1609986983080,"results":"23","hashOfConfig":"17"},{"size":446,"mtime":1609960278930,"results":"24","hashOfConfig":"17"},{"size":1512,"mtime":1609961027270,"results":"25","hashOfConfig":"17"},{"size":1372,"mtime":1609988300270,"results":"26","hashOfConfig":"17"},{"size":3021,"mtime":1609991310210,"results":"27","hashOfConfig":"17"},{"size":6521,"mtime":1609961157930,"results":"28","hashOfConfig":"17"},{"size":1460,"mtime":1609989033680,"results":"29","hashOfConfig":"17"},{"size":864,"mtime":1609908241910,"results":"30","hashOfConfig":"17"},{"size":615,"mtime":1609911009910,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1x0w0l3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/hector/spotifiy-ui-clone/src/index.tsx",[],["64","65"],"/home/hector/spotifiy-ui-clone/src/reportWebVitals.ts",[],"/home/hector/spotifiy-ui-clone/src/App.tsx",["66","67"],"/home/hector/spotifiy-ui-clone/src/Components/Login/Login.tsx",[],"/home/hector/spotifiy-ui-clone/src/lib/spotify.ts",[],"/home/hector/spotifiy-ui-clone/src/Components/Player/Player.tsx",[],"/home/hector/spotifiy-ui-clone/src/Store/reducers/App.ts",[],"/home/hector/spotifiy-ui-clone/src/Store/actions/actionTypes.ts",[],"/home/hector/spotifiy-ui-clone/src/Store/actions/player.ts",[],"/home/hector/spotifiy-ui-clone/src/Components/Player/SideBar/SideBar.tsx",[],"/home/hector/spotifiy-ui-clone/src/Components/Player/Body/Body.tsx",["68","69","70","71"],"/home/hector/spotifiy-ui-clone/src/Components/Player/Footer/Footer.tsx",["72","73","74","75","76","77","78"],"import React, {useEffect, useState} from 'react';\nimport './Footer.css';\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setItem, setPlaying, setRepeat, setShuffle, setVolume } from '../../../Store/actions/player';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nexport interface FooterProps {\n    spotify: any;\n}\nlet change = false;\nconst Footer: React.FC<FooterProps> = ({spotify}) => {\n    const dispatch = useDispatch();\n    \n    //variables\n    const playing = useSelector((stateCurrent : any)=> stateCurrent.App.playing);\n    const item = useSelector((stateCurrent: any) => stateCurrent.App.item);\n    const shuffle = useSelector((stateCurrent: any) => stateCurrent.App.shuffle);\n    const repeat = useSelector((stateCurrent: any) => stateCurrent.App.repeat);\n    const volume = useSelector((stateCurrent: any) => stateCurrent.App.volume);\n\n    //dispatches\n    const set_Playing = (playing: boolean) => dispatch(setPlaying(playing));\n    const set_item = (item: any) => dispatch(setItem(item));\n    const set_shuffle = (shuffle: boolean) => dispatch(setShuffle(shuffle));\n    const set_repeat = (repeat: string) => dispatch(setRepeat(repeat));\n    const set_volume = (volume: any) => dispatch(setVolume(volume));\n    \n    //handlers\n    \n    const repeatHandler = async () => {\n        const _ = await spotify.getMyCurrentPlaybackState();\n        if(_.repeat_state === 'off' || _.repeat_state === 'context'){//off state\n            spotify.setRepeat('track');\n            set_repeat('track');\n        }\n        if(_.repeat_state === 'track'){\n            spotify.setRepeat('off');\n            set_repeat('off');\n        }\n    }\n\n    const shuffleHandler = async () => {\n        const _ = await spotify.getMyCurrentPlaybackState();\n        console.log('shuffle', _);\n        spotify.setShuffle(!_.shuffle_state);\n        set_shuffle(!_.shuffle_state);\n    }\n\n    const pauseHandler = () => {\n        if(playing){  \n            spotify?.pause();\n            set_Playing(false);\n        } else {\n            spotify?.play();\n            set_Playing(true);\n        }\n    }\n\n    const skipPreviousHandler = async () => {\n        await spotify.skipToPrevious();\n        const _ = await spotify.getMyCurrentPlaybackState();\n        const response = await spotify.getMyCurrentPlaybackState();\n        set_Playing(response.is_playing);\n        set_item(response.item);\n    }\n\n    const skipNextHandler = async () => {\n        await spotify.skipToNext();\n        const _ = await spotify.getMyCurrentPlaybackState();\n        const response = await spotify.getMyCurrentPlaybackState();\n        set_Playing(response.is_playing);\n        set_item(response.item);\n    }\n    const volumeHandler = (event: object, value: number | number[]) => {\n\n        spotify.setVolume(value);\n        set_volume(value);\n    }\n\n    function valuetext(value: number) {\n        return `${value}`;\n    }\n    \n    \n\n    //Listener, when spotify changes update info of object, of the Spotify desktop app or web app\n    useEffect(() => {\n        spotify.getMyCurrentPlaybackState().then((new_info: any) => {\n            console.log('la new info', new_info);\n            set_Playing(new_info.is_playing);\n            set_item(new_info.item);\n        });\n        setInterval(function(){ change = !change;}, 30000);\n    }, [spotify, change]);\n\n\n    return (  \n        <div className=\"footer\">\n                <div className=\"footer__left\">    \n                    <img className=\"footer__albumLogo\"  src={item?.album?.images[0]?.url}\n                        alt={item?.name}/>\n                    \n                    <div className=\"footer__songInfo\">\n                        \n                        <div className=\"footer__like\">\n                            <h4>{item?.name}</h4>\n                            <FavoriteBorderIcon />\n                        </div>\n                        <p>{item?.artists?.map((artist: any) => artist.name).join(\", \")}</p>\n                    </div>\n                </div>\n                \n                <div className=\"footer__center\">\n                    <ShuffleIcon onClick={shuffleHandler} className=\"footer__green\" />\n                    <SkipPreviousIcon onClick={skipPreviousHandler} className=\"footer__icon\" />\n                    {playing ? (\n                    <PauseCircleOutlineIcon\n                        onClick={pauseHandler}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                    ) : (\n                    <PlayCircleOutlineIcon\n                        onClick={pauseHandler}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                    )}\n                    <SkipNextIcon onClick={skipNextHandler} className=\"footer__icon\" />\n                    <RepeatIcon onClick={repeatHandler} className=\"footer__green\" />\n                </div>\n\n\n                <div className=\"footer__right\">\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <PlaylistPlayIcon />\n                        </Grid>\n                        <Grid item>\n                            <VolumeDownIcon />\n                        </Grid>\n                        <Grid item xs>\n                            <Slider\n                                    defaultValue={30}\n                                    getAriaValueText={valuetext}\n                                    aria-labelledby=\"discrete-slider\"\n                                    valueLabelDisplay=\"auto\"\n                                    onChangeCommitted={volumeHandler}\n                                    step={10}\n                                    min={10}\n                                    max={100}\n                            />\n                        </Grid>\n                    </Grid>\n                </div>\n        </div>\n    );\n}\n \nexport default Footer;","/home/hector/spotifiy-ui-clone/src/Components/Player/SideBar/SideBarOptions/SideBarOptions.tsx",["79"],"/home/hector/spotifiy-ui-clone/src/Components/Player/Body/Header/Header.tsx",[],"/home/hector/spotifiy-ui-clone/src/Components/Player/Body/SongRow/SongRow.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":57,"column":6,"nodeType":"90","endLine":57,"endColumn":8,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":19,"column":11,"nodeType":"86","messageId":"87","endLine":19,"endColumn":18},{"ruleId":"84","severity":1,"message":"93","line":28,"column":15,"nodeType":"86","messageId":"87","endLine":28,"endColumn":16},{"ruleId":"84","severity":1,"message":"93","line":43,"column":15,"nodeType":"86","messageId":"87","endLine":43,"endColumn":16},{"ruleId":"88","severity":1,"message":"94","line":51,"column":8,"nodeType":"90","endLine":51,"endColumn":10,"suggestions":"95"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"96","line":25,"column":11,"nodeType":"86","messageId":"87","endLine":25,"endColumn":18},{"ruleId":"84","severity":1,"message":"97","line":26,"column":11,"nodeType":"86","messageId":"87","endLine":26,"endColumn":17},{"ruleId":"84","severity":1,"message":"98","line":27,"column":11,"nodeType":"86","messageId":"87","endLine":27,"endColumn":17},{"ruleId":"84","severity":1,"message":"93","line":69,"column":15,"nodeType":"86","messageId":"87","endLine":69,"endColumn":16},{"ruleId":"84","severity":1,"message":"93","line":77,"column":15,"nodeType":"86","messageId":"87","endLine":77,"endColumn":16},{"ruleId":"88","severity":1,"message":"99","line":102,"column":8,"nodeType":"90","endLine":102,"endColumn":25,"suggestions":"100"},{"ruleId":"84","severity":1,"message":"101","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":19},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'set_discover_weekly', 'set_playlist', 'set_token', and 'set_user'. Either include them or remove the dependency array.","ArrayExpression",["104"],"'playing' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCurrentHandler'. Either include it or remove the dependency array.",["105"],"'shuffle' is assigned a value but never used.","'repeat' is assigned a value but never used.","'volume' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'set_Playing' and 'set_item'. Either include them or remove the dependency array. Outer scope values like 'change' aren't valid dependencies because mutating them doesn't re-render the component.",["106"],"'queryString' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [dispatch, set_discover_weekly, set_playlist, set_token, set_user]",{"range":"113","text":"114"},"Update the dependencies array to be: [setCurrentHandler]",{"range":"115","text":"116"},"Update the dependencies array to be: [spotify, set_Playing, set_item]",{"range":"117","text":"118"},[1924,1926],"[dispatch, set_discover_weekly, set_playlist, set_token, set_user]",[1962,1964],"[setCurrentHandler]",[3877,3894],"[spotify, set_Playing, set_item]"]